[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Code Resources for MEC-24-1288",
    "section": "",
    "text": "Context\nThis resource contains the code used to generate and analyze data for publication MEC-24-1288.\n\nGlobal availability of plant DNA barcodes as genomic resources to support basic and policy-relevant biodiversity research\nAuthors: Tyler R. Kartzinel ^1,2,*^, Hannah K. Hoff 1,2 , Timothy Divoll 3 , Bethan L. Littleford- Colquhoun 1,2 , Heidi Anderson 4 , Mary K. Burak 1,2 , Maria Kuzmina 5 , Paul M. Musili 6 , Haldre Rogers 7 , Alejandra J. Troncoso 8,9 , Rebecca Y. Kartzinel 1,10 .\n\n\n1 Department of Ecology, Evolution, & Organismal Biology, Brown University, Providence, RI 02912, USA\n\n\n2 Institute at Brown for Environment and Society, Brown University, Providence, RI 02912, USA\n\n\n3 Center for Computation and Visualization, Brown University, Providence, RI 02912, USA\n\n\n4 Yellowstone Center for Resources, Yellowstone National Park, Mammoth Hot Springs, Wyoming, USA\n\n\n5 Centre for Biodiversity Genomics, University of Guelph, Guelph, Ontario, Canada, N1G 2W1\n\n\n6 Botany Department, National Museums of Kenya, Nairobi, Kenya 00100\n\n\n7 Department of Fish and Wildlife Conservation, Virginia Tech, Blacksburg, VA 24061, USA\n\n\n8 Instituto de Ecología y Biodiversidad (IEB), Santiago, Chile\n\n\n9 Departamento de Biología, Universidad de La Serena, La Serena, Chile\n\n\n10 Brown University Herbarium, Brown University, Providence, RI 02912, USA\n\n\n* Tyler R. Kartzinel\n\n\nEmail: tyler_kartzinel@brown.edu.\n\n\nData Availability: All data required to complete the analyses are included in Datasets S1-S3. Raw downloads from public data repositories will be archived as versions of record used in these analyses at Dryad.",
    "crumbs": [
      "Context"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "Four code notebooks were used in the analyses for this publication.\n\nBuilding the BOLD dataset\nGeographic coverage\nTaxonomic coverage\nCase-study in geographic coverage of site-based reference data",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "building_bold.html",
    "href": "building_bold.html",
    "title": "1  Building the BOLD dataset",
    "section": "",
    "text": "Building the BOLD dataset\nAdd rest of code notebook here and update text",
    "crumbs": [
      "Building global BOLD data",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Building the BOLD dataset</span>"
    ]
  },
  {
    "objectID": "geographic_coverage.html",
    "href": "geographic_coverage.html",
    "title": "4  Geographic Coverage",
    "section": "",
    "text": "Geographic Coverage\nAdd all the code here and instructions for downloading from GBIF",
    "crumbs": [
      "Geographic coverage - BOLD",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Geographic Coverage</span>"
    ]
  },
  {
    "objectID": "taxonomic_coverage.html",
    "href": "taxonomic_coverage.html",
    "title": "6  Taxonomic Coverage",
    "section": "",
    "text": "Taxonomic Coverage\nAdd all code here and update text.",
    "crumbs": [
      "Taxonomic coverage - ITIS",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Taxonomic Coverage</span>"
    ]
  },
  {
    "objectID": "fetch_gbif.html",
    "href": "fetch_gbif.html",
    "title": "7  Fetching plant occurrence records from GBIF",
    "section": "",
    "text": "This notebook contains code used to pull plant species occurrence records from the GBIF API.\nWe use pacman to mange the R packages and load libraries.\n\n## First check for the required packages, install if needed, and load the libraries.\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"sangerseqR\")\n\nWarning: package(s) not installed when version(s) same as or greater than current; use\n  `force = TRUE` to re-install: 'sangerseqR'\n\nremotes::install_github(\"ropensci/bold\")\n\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(dplyr, curl, zip, readr, rgbif, usethis, stringr)\n\n\n7.0.1 Read in BOLD species list and obtain GBIF keys\nThis block uses a site-specific list of species from the Yellowstone BOLD project to pull any taxon keys for those species hosted on GBIF, matched by exact scientific names.\n\nspecies_list &lt;- readr::read_csv(\"../data/BOLD_spplist_20240109.csv\") %&gt;%\n  pull(\"Species\")\n\nRows: 319 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Species\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Get all backbone results (without filtering)\nall_matches &lt;- name_backbone_checklist(species_list, kingdom = \"plants\")\n\nexact_key_matches &lt;- all_matches %&gt;%\n  filter(matchType == \"EXACT\") %&gt;%\n  select(usageKey) %&gt;%\n  as.list()\n\n# Find taxa that didn't match at species level.\nnot_exact_matches &lt;- all_matches %&gt;%\n  filter(matchType != \"EXACT\")\n\n\n\n7.0.2 Investigate taxon keys for fuzzy matches and higher rank matches\nSome keys may indicate that local species are sharing a taxon key, or the keys returned were backed off to higher taxonomic levels. Beware that these can result in many more occurrence records matched at higher taxonomic levels. This can happen for hyper-local species with no occurrence records in GBIF. For our purposes, we kept only exact species matches.\n\n# View results\nnot_exact_matches\n\n# A tibble: 6 × 26\n  usageKey scientificName        canonicalName rank  status confidence matchType\n     &lt;int&gt; &lt;chr&gt;                 &lt;chr&gt;         &lt;chr&gt; &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;    \n1  3171742 Erythranthe Spach     Erythranthe   GENUS ACCEP…         99 HIGHERRA…\n2  2704858 Calamagrostis Adans.  Calamagrostis GENUS ACCEP…         96 HIGHERRA…\n3     3064 Amaranthaceae         Amaranthaceae FAMI… ACCEP…         99 HIGHERRA…\n4  8148051 Bistorta (L.) Scop.   Bistorta      GENUS ACCEP…         99 HIGHERRA…\n5  3033620 Pulsatilla Mill.      Pulsatilla    GENUS ACCEP…         99 HIGHERRA…\n6  3087061 Oreostemma alpigenum… Oreostemma a… SPEC… ACCEP…         98 FUZZY    \n# ℹ 19 more variables: kingdom &lt;chr&gt;, phylum &lt;chr&gt;, order &lt;chr&gt;, family &lt;chr&gt;,\n#   genus &lt;chr&gt;, species &lt;chr&gt;, kingdomKey &lt;int&gt;, phylumKey &lt;int&gt;,\n#   classKey &lt;int&gt;, orderKey &lt;int&gt;, familyKey &lt;int&gt;, genusKey &lt;int&gt;,\n#   speciesKey &lt;int&gt;, synonym &lt;lgl&gt;, class &lt;chr&gt;, acceptedUsageKey &lt;int&gt;,\n#   verbatim_name &lt;chr&gt;, verbatim_index &lt;dbl&gt;, verbatim_kingdom &lt;chr&gt;\n\n\nWe had 6 species that did not match a species key, resulting in 98% of the species having data we can use from GBIF to explore global geographic coverage of these species.\n\n\n7.0.3 Set GBIF credentials\nThe following block will open your .Renviron file. Register an account with GBIF on their website and then add these environment variables to the .Renviron and save: GBIF_USER=“user” GBIF_PWD=“password” GBIF_EMAIL=“email”.\nAfter requesting the data based on our list of taxon keys, we will get millions of occurrence records that we can download; the data will be help in your GBIF portal.\n\nusethis::edit_r_environ()\n\n☐ Edit '/Users/tdivoll/.Renviron'.\n\n\n☐ Restart R for changes to take effect.\n\n\n\n\n7.0.4 Request the occurence data\nWe’ll further restrict the data returned to records that have reliable coordinate data, and use a simple CSV format to reduce the size of the data. The Darwin Core Archive format will include much more metadata, but we’re only interested in the locations for this analysis.\n\ngbif_data_BOLDlist &lt;- occ_download(\n  pred_in(\"taxonKey\", exact_key_matches$usageKey),\n  pred(\"hasCoordinate\", TRUE),\n  pred(\"hasGeospatialIssue\", FALSE),\n  format = \"SIMPLE_CSV\"\n)\n\n\n\n7.0.5 Get metadata and wait\nGet the metadata about the request.\n\ngbif_data_BOLDlist # this will print some info, including the download ID we need to check on the job\n\n&lt;&lt;gbif download&gt;&gt;\n  Your download is being processed by GBIF:\n  https://www.gbif.org/occurrence/download/0067141-241126133413365\n  Most downloads finish within 15 min.\n  Check status with\n  occ_download_wait('0067141-241126133413365')\n  After it finishes, use\n  d &lt;- occ_download_get('0067141-241126133413365') %&gt;%\n    occ_download_import()\n  to retrieve your download.\nDownload Info:\n  Username: tdivoll\n  E-mail: timothy_divoll@brown.edu\n  Format: SIMPLE_CSV\n  Download key: 0067141-241126133413365\n  Created: 2025-01-13T20:13:04.023+00:00\nCitation Info:  \n  Please always cite the download DOI when using this data.\n  https://www.gbif.org/citation-guidelines\n  DOI: 10.15468/dl.sug2d9\n  Citation:\n  GBIF Occurrence Download https://doi.org/10.15468/dl.sug2d9 Accessed from R via rgbif (https://github.com/ropensci/rgbif) on 2025-01-13\n\n\nCheck the status of the download.\n\nocc_download_wait('0066939-241126133413365')\n\nstatus: succeeded\n\n\ndownload is done, status: succeeded\n\n\n&lt;&lt;gbif download metadata&gt;&gt;\n  Status: SUCCEEDED\n  DOI: 10.15468/dl.48qedg\n  Format: SIMPLE_CSV\n  Download key: 0066939-241126133413365\n  Created: 2025-01-13T17:50:02.365+00:00\n  Modified: 2025-01-13T18:02:18.702+00:00\n  Download link: https://api.gbif.org/v1/occurrence/download/request/0066939-241126133413365.zip\n  Total records: 20510078",
    "crumbs": [
      "Case-study -- Yellowstone -- BOLD + GBIF",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Fetching plant occurrence records from GBIF</span>"
    ]
  }
]